query sessionInfo {
  sessionInfo {
    isLoggedOn
    hasProfile
    profileId
  }
}

query whoami {
  whoami
}

query findSafeAddressByOwner($owner: String!) {
  findSafeAddressByOwner(owner: $owner)
}

query initAggregateState {
  initAggregateState {
    hubSignupTransaction
    invitation {
      claimedAt
    }
    invitationTransaction
    safeFundingTransaction
    registration {
      id
      firstName
    }
  }
}

query claimedInvitation {
  claimedInvitation {
    createdAt
    createdByProfileId
    claimedAt
    claimedByProfileId
  }
}

query invitationTransaction {
  invitationTransaction {
    transaction_hash
  }
}

query safeFundingTransaction {
  safeFundingTransaction {
    transaction_hash
  }
}

query hubSignupTransaction {
  hubSignupTransaction {
    transaction_hash
    payload {
      ... on CrcSignup {
        token
      }
    }
  }
}

query myInvitations {
  myInvitations {
    createdAt
    claimedAt
    claimedBy {
      circlesAddress
      circlesSafeOwner
      firstName
      lastName
      avatarUrl
    }
    name
    address
    balance
    code
  }
}

query myProfile {
  myProfile {
    id
    circlesAddress
    circlesSafeOwner
    firstName
    lastName
    dream
    country
    avatarUrl
    avatarCid
    avatarMimeType
    newsletter
    displayTimeCircles
    cityGeonameid
    city {
      geonameid
      name
      country
      latitude
      longitude
      population
    }
    memberships {
      isAdmin
      organisation {
        id
        circlesAddress
        circlesSafeOwner
        name
        description
        avatarUrl
        avatarMimeType
        city {
          geonameid
          name
          country
          latitude
          longitude
          population
        }
      }
    }
  }
}

query profiles($id: [Int!]!) {
  profilesById(ids: $id) {
    id
    circlesAddress
    circlesSafeOwner
    firstName
    lastName
    dream
    country
    avatarUrl
    avatarCid
    avatarMimeType
    cityGeonameid
    status
    city {
      geonameid
      name
      country
      latitude
      longitude
      population
    }
    memberships {
      isAdmin
      organisation {
        id
        circlesAddress
        circlesSafeOwner
        name
        description
        avatarUrl
        avatarMimeType
        city {
          geonameid
          name
          country
          latitude
          longitude
          population
        }
      }
    }
  }
}

query citiesByName($name: String!, $languageCode: String) {
  cities(query: { byName: { name_like: $name, languageCode: $languageCode } }) {
    geonameid
    name
    country
    population
    latitude
    longitude
    feature_code
  }
}

query citiesById($ids: [Int!]!) {
  cities(query: { byId: { geonameid: $ids } }) {
    geonameid
    name
    country
    population
    latitude
    longitude
    feature_code
  }
}

query profilesByName($searchString: String!) {
  search(query: { searchString: $searchString }) {
    id
    circlesSafeOwner
    circlesAddress
    avatarUrl
    firstName
    lastName
    dream
    country
    cityGeonameid
    city {
      geonameid
      country
      name
    }
  }
}

query profilesByCirclesAddress($circlesAddresses: [String!]!) {
  profilesBySafeAddress(safeAddresses: $circlesAddresses) {
    id
    circlesAddress
    firstName
    lastName
    dream
    country
    avatarUrl
    avatarCid
    avatarMimeType
    cityGeonameid
    city {
      geonameid
      name
      country
      latitude
      longitude
      population
    }
    memberships {
      isAdmin
      organisation {
        id
        circlesAddress
        circlesSafeOwner
        name
        description
        avatarUrl
        avatarMimeType
        city {
          geonameid
          name
          country
          latitude
          longitude
          population
        }
      }
    }
  }
}

query lastUBITransaction {
  lastUBITransaction
}

query profilesByIds($id: [Int!]!) {
  profilesById(ids: $id) {
    id
    circlesAddress
    firstName
    lastName
    dream
    country
    avatarUrl
    avatarCid
    avatarMimeType
    cityGeonameid
    city {
      geonameid
      name
      country
      latitude
      longitude
      population
    }
  }
}

query trustRelations($safeAddress: String!) {
  trustRelations(safeAddress: $safeAddress) {
    safeAddress
    safeAddressProfile {
      id
      firstName
      lastName
      avatarUrl
      circlesAddress
    }
    direction
    otherSafeAddress
    otherSafeAddressProfile {
      id
      firstName
      lastName
      avatarUrl
      circlesAddress
    }
  }
}

query profileById($id: Int!) {
  profilesById(ids: [$id]) {
    id
    circlesSafeOwner
    circlesAddress
    avatarUrl
    firstName
    lastName
    dream
    country
    cityGeonameid
    city {
      geonameid
      country
      name
    }
  }
}

query profileBySafeAddress($safeAddress: String!) {
  profilesBySafeAddress(safeAddresses: [$safeAddress]) {
    id
    circlesSafeOwner
    circlesAddress
    avatarUrl
    firstName
    lastName
    dream
    country
    cityGeonameid
    city {
      geonameid
      country
      name
    }
    lastEvent {
      block_number
      direction
      safe_address
      timestamp
      transaction_hash
      transaction_index
      type
      value
      payload {
        ... on CrcHubTransfer {
          from
          to
          flow
        }
        ... on CrcTrust {
          address
          can_send_to
          limit
        }
      }
    }
    youTrust
    trustsYou
    memberships {
      isAdmin
      organisation {
        id
        circlesAddress
        circlesSafeOwner
        name
        description
        avatarUrl
        avatarMimeType
        city {
          geonameid
          name
          country
          latitude
          longitude
          population
        }
      }
    }
  }
}

query tags($typeId_in: [String!]!, $value_like: String) {
  tags(query: { typeId_in: $typeId_in, value_like: $value_like }) {
    id
    typeId
    value
  }
}

query tagById($id: Int!) {
  tagById(id: $id) {
    id
    typeId
    value
  }
}

query citiesByName($name: String!, $languageCode: String) {
  cities(query: { byName: { name_like: $name, languageCode: $languageCode } }) {
    geonameid
    name
    country
    population
    latitude
    longitude
    feature_code
  }
}

query citiesById($ids: [Int!]!) {
  cities(query: { byId: { geonameid: $ids } }) {
    geonameid
    name
    country
    population
    latitude
    longitude
    feature_code
  }
}

query organisations($pagination: PaginationArgs) {
  organisations(pagination: $pagination) {
    id
    circlesAddress
    createdAt
    name
    avatarMimeType
    avatarUrl
    city {
      geonameid
      latitude
      longitude
      name
      population
    }
  }
}

query regions {
  regions {
    id
    circlesAddress
    createdAt
    name
    avatarMimeType
    avatarUrl
    city {
      geonameid
      latitude
      longitude
      name
      population
    }
  }
}

query organisationsByAddress($addresses: [String!]!) {
  organisationsByAddress(addresses: $addresses) {
    id
    circlesAddress
    createdAt
    name
    avatarMimeType
    avatarUrl
    city {
      geonameid
      latitude
      longitude
      name
      population
    }
    members {
      ... on Organisation {
        id
        circlesAddress
        createdAt
        name
        avatarMimeType
        avatarUrl
        city {
          geonameid
          latitude
          longitude
          name
          population
        }
      }
      ... on Profile {
        id
        circlesSafeOwner
        circlesAddress
        avatarUrl
        firstName
        lastName
        dream
        country
        cityGeonameid
        city {
          geonameid
          country
          name
        }
      }
    }
  }
}

query stats {
  stats {
    cityRank
    inviteRank
    currentGoal
    totalCitizens
    currentGoalFrom
    nextGoalAt
    cities {
      geonameid
      latitude
      longitude
      name
      citizenCount
      population
    }
    countries {
      citizenCount
      name
    }
  }
}

query commonTrust($safeAddress1: String!, $safeAddress2: String!) {
  commonTrust(safeAddress1: $safeAddress1, safeAddress2: $safeAddress2) {
    type
    safeAddress1
    safeAddress2
    profile {
      id
      firstName
      lastName
      avatarUrl
      circlesAddress
    }
  }
}

query offers(
  $createdByProfileId: Int
  $id: String
  $publishedAt_gt: String
  $publishedAt_lt: String
  $categoryTagId: Int
) {
  offers(
    query: {
      createdByProfileId: $createdByProfileId
      id: $id
      publishedAt_gt: $publishedAt_gt
      publishedAt_lt: $publishedAt_lt
      categoryTagId: $categoryTagId
    }
  ) {
    id
    createdBy {
      id
      circlesAddress
      firstName
      lastName
      avatarUrl
      avatarMimeType
      city {
        name
        country
      }
    }
    createdByProfileId
    publishedAt
    unlistedAt
    purchasedAt
    title
    pictureUrl
    pictureMimeType
    description
    categoryTagId
    categoryTag {
      id
      typeId
      value
    }
    geonameid
    pricePerUnit
    unitTag {
      id
      typeId
      value
    }
    unitTagId
    maxUnits
    deliveryTermsTag {
      id
      typeId
      value
    }
    deliveryTermsTagId
    city {
      geonameid
      country
      name
      latitude
      longitude
      population
      feature_code
    }
  }
}
query tags($typeId_in: [String!]!, $value_like: String) {
  tags(query: { typeId_in: $typeId_in, value_like: $value_like }) {
    id
    typeId
    value
  }
}
query tagById($id: Int!) {
  tagById(id: $id) {
    id
    typeId
    value
  }
}

query citiesByName($name: String!, $languageCode: String) {
  cities(query: { byName: { name_like: $name, languageCode: $languageCode } }) {
    geonameid
    name
    country
    population
    latitude
    longitude
    feature_code
  }
}

query citiesById($ids: [Int!]!) {
  cities(query: { byId: { geonameid: $ids } }) {
    geonameid
    name
    country
    population
    latitude
    longitude
    feature_code
  }
}

query stream($types: [EventType!]! $safeAddress: String! $pagination: PaginationArgs! $filter: ProfileEventFilter) {
  events(
    types: $types
    safeAddress: $safeAddress
    pagination: $pagination
    filter: $filter
  ) {
    timestamp
    transaction_hash
    safe_address
    direction
    type
    payload {
      ... on CrcHubTransfer {
        transaction_hash
        from
        from_profile {
          id
          firstName
          lastName
          avatarUrl
          circlesAddress
        }
        to
        to_profile {
          id
          firstName
          lastName
          avatarUrl
          circlesAddress
        }
        flow
        transfers {
          token
          from
          from_profile {
            id
            firstName
            lastName
            avatarUrl
            circlesAddress
          }
          to
          to_profile {
            id
            firstName
            lastName
            avatarUrl
            circlesAddress
          }
          value
        }
        tags {
          id
          typeId
          value
        }
      }
      ...on CrcTrust {
        transaction_hash
        address
        can_send_to
        limit
      }
      ...on CrcSignup {
        transaction_hash
        user
        token
      }
      ...on CrcMinting {
        transaction_hash
        token
        from
        from_profile {
          id
          firstName
          lastName
          avatarUrl
          circlesAddress
        }
        to
        to_profile {
          id
          firstName
          lastName
          avatarUrl
          circlesAddress
        }
        value
      }
      ...on EthTransfer {
        transaction_hash
        from
        to
        value
      }
      ...on GnosisSafeEthTransfer {
        transaction_hash
        initiator
        from
        to
        value
      }
      ...on ChatMessage {
        from
        to
        text
      }
      ...on MembershipOffer {
        createdBy
        organisation
        isAdmin
      }
      ...on MembershipAccepted {
        createdBy
        member
        organisation
      }
      ...on MembershipRejected {
        member
        organisation
      }
      ...on WelcomeMessage {
        member
      }
      ...on InvitationCreated {
        name
        code
      }
      ...on InvitationRedeemed {
        name
        code
        redeemedBy
      }
      ...on OrganisationCreated {
        organisation
      }
      ...on MemberAdded {
        createdBy
        isAdmin
        member
        organisation
      }
    }
  }
}

query aggregates($types:[AggregateType!]! $safeAddress:String!) {
  aggregates(
    types: $types
    safeAddress: $safeAddress) {
    type
    safe_address
    safe_address_profile {
      firstName
      lastName
      avatarUrl
      circlesAddress
    }
    payload {
      ...on CrcBalances {
        lastUpdatedAt
        balances {
          token_address
          token_owner_address
          token_owner_profile {
            firstName
            lastName
            avatarUrl
            circlesAddress
          }
          token_balance
        }
      }
      ...on Contacts {
        lastUpdatedAt
        contacts {
          metadata {
            name
            directions
            values
            timestamps
          }
          lastContactAt
          contactAddress
          contactAddress_Profile {
            firstName
            lastName
            avatarUrl
            circlesAddress
          }
        }
      }
      ...on Members {
        lastUpdatedAt
        members{
          ...on Profile {
            circlesAddress
          }
          ...on Organisation {
            circlesAddress
          }
        }
      }
      ...on Memberships {
        lastUpdatedAt
        organisations {
          circlesAddress
        }
      }
    }
  }
}