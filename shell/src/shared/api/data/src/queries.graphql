query init {
    sessionInfo {
        profile {
            # init.registration
            id
            emailAddress
            circlesSafeOwner
            # init.safe
            circlesAddress
            # init.profile
            displayName
            firstName
            lastName
            city {
                geonameid
                name
            }
            dream
            avatarUrl
            # init.invitation
            claimedInvitation {
                claimedAt
            }
            # init.eoaInvitationTransaction
            invitationTransaction {
                timestamp
                transaction_hash
            }
            # init.ubi
            circlesTokenAddress
        }
    }
}

query sessionInfo {
    sessionInfo {
        isLoggedOn
        hasProfile
        profileId
        lastAcknowledgedAt
        capabilities {
            type
        }
    }
}

query claimedInvitation {
    claimedInvitation {
        createdAt
        createdByProfileId
        claimedAt
        claimedByProfileId
    }
}

query invitationTransaction {
    invitationTransaction {
        transaction_hash
    }
}

query hubSignupTransaction {
    hubSignupTransaction {
        transaction_hash
        payload {
            ... on CrcSignup {
                token
            }
        }
    }
}

query safeInfo {
    safeInfo {
        lastUbiAt
        safeAddress
        tokenAddress
        randomValue
    }
}

query stats {
    stats {
        profilesCount
        verificationsCount
    }
}

query findSafesByOwner($owner: String!) {
    findSafesByOwner(owner: $owner) {
        type
        safeAddress
        lastUbiAt
        randomValue
        tokenAddress
        safeProfile {
            id
            circlesAddress
            circlesSafeOwner
            displayName
            firstName
            lastName
            dream
            avatarUrl
            cityGeonameid
            city {
                geonameid
                name
                country
                latitude
                longitude
                population
            }
        }
    }
}

query myInvitations {
    myInvitations {
        createdAt
        claimedAt
        claimedBy {
            circlesAddress
            circlesSafeOwner
            displayName
            firstName
            lastName
            avatarUrl
        }
        name
        address
        balance
        code
    }
}

query myProfile {
    myProfile {
        id
        circlesAddress
        circlesSafeOwner
        successorOfCirclesAddress
        displayName
        firstName
        lastName
        emailAddress
        dream
        country
        avatarUrl
        avatarCid
        avatarMimeType
        newsletter
        displayTimeCircles
        displayCurrency
        cityGeonameid
        city {
            geonameid
            name
            country
            latitude
            longitude
            population
        }
        memberships {
            isAdmin
            organisation {
                id
                circlesAddress
                circlesSafeOwner
                name
                description
                avatarUrl
            }
        }
        verifications {
            createdAt
            revokedAt
            verifierSafeAddress
            verifierProfile {
                circlesAddress
                avatarUrl
                name
            }
        }
    }
}

query profiles($id: [Int!]!) {
    profilesById(ids: $id) {
        id
        circlesAddress
        circlesSafeOwner
        successorOfCirclesAddress
        displayName
        firstName
        lastName
        dream
        avatarUrl
        displayCurrency
        city {
            geonameid
            name
            country
        }
        memberships {
            isAdmin
            organisation {
                id
                circlesAddress
                circlesSafeOwner
                name
                description
                avatarUrl
                city {
                    geonameid
                    name
                    country
                }
            }
        }
        verifications {
            createdAt
            revokedAt
            verifierSafeAddress
            verifierProfile {
                circlesAddress
                avatarUrl
                name
                city {
                    geonameid
                    name
                    country
                }
            }
        }
    }
}

query citiesByName($name: String!, $languageCode: String) {
    cities(query: { byName: { name_like: $name, languageCode: $languageCode } }) {
        geonameid
        name
        country
        population
        latitude
        longitude
        feature_code
    }
}

query citiesById($ids: [Int!]!) {
    cities(query: { byId: { geonameid: $ids } }) {
        geonameid
        name
        country
        population
        latitude
        longitude
        feature_code
    }
}

query profilesByName($searchString: String!) {
    search(query: { searchString: $searchString }) {
        id
        origin
        circlesSafeOwner
        circlesAddress
        successorOfCirclesAddress
        avatarUrl
        displayName
        firstName
        lastName
        dream
        country
        displayCurrency
        city {
            geonameid
            name
            country
        }
        verifications {
            createdAt
            revokedAt
            verifierSafeAddress
            verifierProfile {
                circlesAddress
                avatarUrl
                name
                city {
                    geonameid
                    name
                    country
                }
            }
        }
    }
}

query getRecentProfiles($pagination: PaginationArgs) {
    recentProfiles(pagination: $pagination) {
        id
        circlesAddress
        origin
        successorOfCirclesAddress
        displayName
        firstName
        lastName
        dream
        country
        avatarUrl
        city {
            geonameid
            name
            country
        }
        verifications {
            createdAt
            revokedAt
            verifierSafeAddress
            verifierProfile {
                circlesAddress
                avatarUrl
                name
                city {
                    geonameid
                    name
                    country
                }
            }
        }
    }
}

query profilesByCirclesAddress($circlesAddresses: [String!]!) {
    profilesBySafeAddress(safeAddresses: $circlesAddresses) {
        id
        circlesAddress
        origin
        successorOfCirclesAddress
        displayName
        firstName
        lastName
        dream
        avatarUrl
        city {
            geonameid
            name
            country
        }
        memberships {
            isAdmin
            organisation {
                id
                circlesAddress
                circlesSafeOwner
                name
                description
                avatarUrl
                city {
                    geonameid
                    name
                    country
                }
            }
        }
        verifications {
            createdAt
            revokedAt
            verifierSafeAddress
            verifierProfile {
                circlesAddress
                avatarUrl
                name
                city {
                    geonameid
                    name
                    country
                }
            }
        }
    }
}

query profilesByIds($id: [Int!]!) {
    profilesById(ids: $id) {
        id
        circlesAddress
        origin
        successorOfCirclesAddress
        displayName
        firstName
        lastName
        dream
        avatarUrl
        city {
            geonameid
            name
            country
        }
        verifications {
            createdAt
            revokedAt
            verifierSafeAddress
            verifierProfile {
                circlesAddress
                avatarUrl
                name
                city {
                    geonameid
                    name
                    country
                }
            }
        }
    }
}

query trustRelations($safeAddress: String!) {
    trustRelations(safeAddress: $safeAddress) {
        safeAddress
        safeAddressProfile {
            id
            displayName
            firstName
            lastName
            origin
            avatarUrl
            successorOfCirclesAddress
            circlesAddress
        }
        direction
        otherSafeAddress
        otherSafeAddressProfile {
            id
            displayName
            firstName
            lastName
            avatarUrl
            successorOfCirclesAddress
            circlesAddress
            verifications {
                createdAt
                revokedAt
                verifierSafeAddress
                verifierProfile {
                    circlesAddress
                    avatarUrl
                    name
                    city {
                        geonameid
                        name
                        country
                    }
                }
            }
        }
    }
}

query profileById($id: Int!) {
    profilesById(ids: [$id]) {
        id
        successorOfCirclesAddress
        circlesSafeOwner
        circlesAddress
        avatarUrl
        displayName
        firstName
        lastName
        dream
        city {
            geonameid
            country
            name
        }
        verifications {
            createdAt
            revokedAt
            verifierSafeAddress
            verifierProfile {
                circlesAddress
                avatarUrl
                name
                city {
                    geonameid
                    name
                    country
                }
            }
        }
    }
}

query profileBySafeAddress($safeAddress: String!) {
    profilesBySafeAddress(safeAddresses: [$safeAddress]) {
        id
        successorOfCirclesAddress
        circlesSafeOwner
        circlesAddress
        avatarUrl
        displayName
        firstName
        lastName
        dream
        city {
            geonameid
            country
            name
        }
        lastEvent {
            block_number
            direction
            safe_address
            timestamp
            transaction_hash
            transaction_index
            type
            value
            payload {
                ... on CrcHubTransfer {
                    from
                    to
                    flow
                }
                ... on CrcTrust {
                    address
                    can_send_to
                    limit
                }
            }
        }
        memberships {
            isAdmin
            organisation {
                id
                circlesAddress
                circlesSafeOwner
                name
                description
                avatarUrl
                city {
                    geonameid
                    name
                    country
                }
            }
        }
        verifications {
            createdAt
            revokedAt
            verifierSafeAddress
            verifierProfile {
                circlesAddress
                avatarUrl
                name
                city {
                    geonameid
                    name
                    country
                }
            }
        }
    }
}

query tags($typeId_in: [String!]!, $value_like: String) {
    tags(query: { typeId_in: $typeId_in, value_like: $value_like }) {
        id
        value
    }
}

query tagById($id: Int!) {
    tagById(id: $id) {
        id
        value
    }
}

query citiesByName($name: String!, $languageCode: String) {
    cities(query: { byName: { name_like: $name, languageCode: $languageCode } }) {
        geonameid
        name
        country
        population
        latitude
        longitude
        feature_code
    }
}

query citiesById($ids: [Int!]!) {
    cities(query: { byId: { geonameid: $ids } }) {
        geonameid
        name
        country
        population
        latitude
        longitude
        feature_code
    }
}

query organisations($pagination: PaginationArgs) {
    organisations(pagination: $pagination) {
        id
        circlesAddress
        createdAt
        name
        avatarUrl
        city {
            geonameid
            name
            country
        }
    }
}

query regions {
    regions {
        id
        circlesAddress
        createdAt
        name
        avatarUrl
        city {
            geonameid
            name
            country
        }
    }
}

query organisationsByAddress($addresses: [String!]!) {
    organisationsByAddress(addresses: $addresses) {
        id
        circlesAddress
        createdAt
        name
        avatarUrl
        city {
            geonameid
            name
            country
        }
        members {
            ... on Organisation {
                id
                circlesAddress
                createdAt
                name
                avatarUrl
                city {
                    geonameid
                    name
                    country
                }
            }
            ... on Profile {
                id
                successorOfCirclesAddress
                circlesSafeOwner
                circlesAddress
                avatarUrl
                displayName
                firstName
                lastName
                dream
                city {
                    geonameid
                    country
                    name
                }
                verifications {
                    createdAt
                    revokedAt
                    verifierSafeAddress
                    verifierProfile {
                        circlesAddress
                        avatarUrl
                        name
                        city {
                            geonameid
                            name
                            country
                        }
                    }
                }
            }
        }
    }
}

query commonTrust($safeAddress1: String!, $safeAddress2: String!) {
    commonTrust(safeAddress1: $safeAddress1, safeAddress2: $safeAddress2) {
        type
        safeAddress1
        safeAddress2
        profile {
            id
            displayName
            firstName
            lastName
            avatarUrl
            successorOfCirclesAddress
            circlesAddress
        }
    }
}

query tags($typeId_in: [String!]!, $value_like: String) {
    tags(query: { typeId_in: $typeId_in, value_like: $value_like }) {
        id
        value
    }
}

query tagById($id: Int!) {
    tagById(id: $id) {
        id
        value
    }
}

query citiesByName($name: String!, $languageCode: String) {
    cities(query: { byName: { name_like: $name, languageCode: $languageCode } }) {
        geonameid
        name
        country
        population
        latitude
        longitude
        feature_code
    }
}

query citiesById($ids: [Int!]!) {
    cities(query: { byId: { geonameid: $ids } }) {
        geonameid
        name
        country
        population
        latitude
        longitude
        feature_code
    }
}

query stream(
    $types: [EventType!]!
    $safeAddress: String!
    $pagination: PaginationArgs!
    $filter: ProfileEventFilter
) {
    events(
        types: $types
        safeAddress: $safeAddress
        pagination: $pagination
        filter: $filter
    ) {
        timestamp
        transaction_hash
        block_number
        safe_address
        contact_address
        contact_address_profile {
            successorOfCirclesAddress
            circlesAddress
            displayName
            firstName
            lastName
            avatarUrl
        }
        direction
        type
        payload {
            ... on CrcHubTransfer {
                transaction_hash
                from
                from_profile {
                    id
                    displayName
                    firstName
                    lastName
                    avatarUrl
                    circlesAddress
                }
                to
                to_profile {
                    id
                    displayName
                    firstName
                    lastName
                    avatarUrl
                    circlesAddress
                }
                flow
                transfers {
                    token
                    from
                    from_profile {
                        id
                        displayName
                        firstName
                        lastName
                        avatarUrl
                        circlesAddress
                    }
                    to
                    to_profile {
                        id
                        displayName
                        firstName
                        lastName
                        avatarUrl
                        circlesAddress
                    }
                    value
                }
                tags {
                    id
                    value
                }
            }
            ... on CrcTrust {
                transaction_hash
                address
                can_send_to
                limit
            }
            ... on CrcSignup {
                transaction_hash
                user
                token
            }
            ... on CrcMinting {
                transaction_hash
                token
                from
                from_profile {
                    id
                    displayName
                    firstName
                    lastName
                    avatarUrl
                    circlesAddress
                }
                to
                to_profile {
                    id
                    displayName
                    firstName
                    lastName
                    avatarUrl
                    circlesAddress
                }
                value
            }
            ... on EthTransfer {
                transaction_hash
                from
                to
                value
            }
            ... on Erc20Transfer {
                transaction_hash
                from
                from_profile {
                    id
                    displayName
                    firstName
                    lastName
                    avatarUrl
                    circlesAddress
                }
                to
                to_profile {
                    id
                    displayName
                    firstName
                    lastName
                    avatarUrl
                    circlesAddress
                }
                value
            }
            ... on GnosisSafeEthTransfer {
                transaction_hash
                initiator
                from
                to
                value
            }
            ... on ChatMessage {
                from
                from_profile {
                    id
                    displayName
                    firstName
                    lastName
                    avatarUrl
                    circlesAddress
                }
                to
                to_profile {
                    id
                    displayName
                    firstName
                    lastName
                    avatarUrl
                    circlesAddress
                }
                text
            }
            ... on MembershipOffer {
                createdBy
                organisation
                organisation_profile {
                    name
                    avatarUrl
                    circlesAddress
                }
                isAdmin
            }
            ... on MembershipAccepted {
                createdBy
                member
                organisation
                organisation_profile {
                    name
                    avatarUrl
                    circlesAddress
                }
            }
            ... on MembershipRejected {
                member
                organisation
                organisation_profile {
                    name
                    avatarUrl
                    circlesAddress
                }
            }
            ... on WelcomeMessage {
                invitedBy
                invitedBy_profile {
                    id
                    displayName
                    firstName
                    lastName
                    avatarUrl
                    circlesAddress
                }
            }
            ... on InvitationCreated {
                name
                code
            }
            ... on InvitationRedeemed {
                name
                code
                redeemedBy
                redeemedBy_profile {
                    id
                    displayName
                    firstName
                    lastName
                    avatarUrl
                    circlesAddress
                }
            }
            ... on SaleEvent {
                buyer
                buyer_profile {
                    id
                    displayName
                    firstName
                    lastName
                    avatarUrl
                    circlesAddress
                }
                invoice {
                    id
                    buyerSignature
                    buyerSignedDate
                    sellerSignature
                    sellerSignedDate
                    cancelledAt
                    cancelReason
                    lines {
                        amount
                        offer {
                            id
                            title
                            pictureUrl
                        }
                    }
                }
            }
            ... on Purchased {
                invoice {
                    purchaseId
                    sellerSignature
                    sellerSignedDate
                    cancelledAt
                    sellerProfile {
                        id
                        displayName
                        firstName
                        lastName
                        avatarUrl
                        circlesAddress
                    }
                    pickupCode
                    lines {
                        amount
                        offer {
                            pictureUrl
                            title
                            description
                        }
                    }
                }
            }
            ... on OrganisationCreated {
                organisation
                organisation_profile {
                    name
                    avatarUrl
                    circlesAddress
                    displayCurrency
                }
            }
            ... on MemberAdded {
                createdBy
                isAdmin
                member
                organisation
                organisation_profile {
                    name
                    avatarUrl
                    circlesAddress
                    displayCurrency
                }
            }
            ... on SafeVerified {
                safe_address
                organisation_profile {
                    name
                    avatarUrl
                    circlesAddress
                    displayCurrency
                }
            }
            ... on NewUser {
                profile {
                    id
                    displayName
                    firstName
                    lastName
                    dream
                    avatarUrl
                    circlesAddress
                }
            }
        }
    }
}

query aggregates(
    $types: [AggregateType!]!
    $safeAddress: String!
    $filter: ProfileAggregateFilter
) {
    aggregates(types: $types, safeAddress: $safeAddress, filter: $filter) {
        type
        safe_address
        safe_address_profile {
            id
            displayName
            firstName
            lastName
            avatarUrl
            circlesAddress
        }
        payload {
            ... on Offers {
                lastUpdatedAt
                offers {
                    id
                    version
                    createdByProfile {
                        id
                        displayName
                        firstName
                        lastName
                        avatarUrl
                        circlesAddress
                    }
                    createdByAddress
                    createdAt
                    title
                    pictureUrl
                    pictureMimeType
                    description
                    pricePerUnit
                    timeCirclesPriceShare
                }
            }
            ... on CrcBalances {
                lastUpdatedAt
                balances {
                    token_address
                    token_owner_address
                    token_owner_profile {
                        id
                        displayName
                        firstName
                        lastName
                        avatarUrl
                        circlesAddress
                    }
                    token_balance
                }
            }
            ... on Erc20Balances {
                lastUpdatedAt
                balances {
                    token_address
                    token_owner_address
                    token_owner_profile {
                        id
                        displayName
                        firstName
                        lastName
                        avatarUrl
                        circlesAddress
                    }
                    token_balance
                }
            }
            ... on Contacts {
                lastUpdatedAt
                contacts {
                    metadata {
                        name
                        directions
                        values
                        timestamps
                    }
                    lastContactAt
                    contactAddress
                    contactAddress_Profile {
                        id
                        displayName
                        firstName
                        lastName
                        avatarUrl
                        circlesAddress
                        city {
                            geonameid
                            name
                            country
                        }
                        memberships {
                            isAdmin
                            organisation {
                                id
                                circlesAddress
                                circlesSafeOwner
                                name
                                description
                                avatarUrl
                                city {
                                    geonameid
                                    name
                                    country
                                }
                            }
                        }
                        verifications {
                            createdAt
                            revokedAt
                            verifierSafeAddress
                            verifierProfile {
                                circlesAddress
                                avatarUrl
                                name
                                city {
                                    geonameid
                                    name
                                    country
                                }
                            }
                        }
                    }
                }
            }
            ... on Members {
                lastUpdatedAt
                members {
                    ... on Profile {
                        successorOfCirclesAddress
                        circlesAddress
                    }
                    ... on Organisation {
                        circlesAddress
                    }
                }
            }
            ... on Memberships {
                lastUpdatedAt
                organisations {
                    circlesAddress
                }
            }
            ... on Purchases {
                lastUpdatedAt
                purchases {
                    id
                    createdAt
                    createdByAddress
                    createdByProfile {
                        id
                        displayName
                        firstName
                        lastName
                        avatarUrl
                        circlesAddress
                    }
                    total
                    lines {
                        id
                        amount
                        offer {
                            id
                            version
                            title
                            description
                            pictureUrl
                            pricePerUnit
                            timeCirclesPriceShare
                            createdByProfile {
                                id
                                displayName
                                firstName
                                lastName
                                avatarUrl
                                circlesAddress
                            }
                        }
                    }
                    invoices {
                        id
                        sellerAddress
                        paymentTransactionHash
                        buyerAddress
                        pickupCode
                        buyerSignature
                        buyerSignedDate
                        sellerSignature
                        sellerSignedDate
                        cancelledAt
                        cancelReason
                        sellerProfile {
                            id
                            displayName
                            firstName
                            lastName
                            avatarUrl
                            circlesAddress
                        }
                    }
                }
            }
            ... on Sales {
                lastUpdatedAt
                sales {
                    id
                    createdAt
                    sellerProfile {
                        id
                        displayName
                        firstName
                        lastName
                        avatarUrl
                        circlesAddress
                    }
                    buyerProfile {
                        id
                        displayName
                        firstName
                        lastName
                        avatarUrl
                        circlesAddress
                        verifications {
                            createdAt
                            revokedAt
                            verifierSafeAddress
                            verifierProfile {
                                circlesAddress
                                avatarUrl
                                name
                                city {
                                    geonameid
                                    name
                                    country
                                }
                            }
                        }
                    }
                    total
                    lines {
                        id
                        amount
                        offer {
                            id
                            version
                            title
                            description
                            pictureUrl
                            pricePerUnit
                            timeCirclesPriceShare
                            createdByProfile {
                                id
                                displayName
                                firstName
                                lastName
                                avatarUrl
                                circlesAddress
                            }
                        }
                    }
                    invoices {
                        id
                        sellerAddress
                        paymentTransactionHash
                        buyerAddress
                        pickupCode
                        buyerSignature
                        buyerSignedDate
                        sellerSignature
                        sellerSignedDate
                        cancelledAt
                        cancelReason
                        buyerProfile {
                            id
                            displayName
                            firstName
                            lastName
                            avatarUrl
                            circlesAddress
                            verifications {
                                createdAt
                                revokedAt
                                verifierSafeAddress
                                verifierProfile {
                                    circlesAddress
                                    avatarUrl
                                    name
                                    city {
                                        geonameid
                                        name
                                        country
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

query directPath($from: String!, $to: String!, $amount: String!) {
    directPath(from: $from, to: $to, amount: $amount) {
        flow
        transfers {
            from
            to
            token
            tokenOwner
            value
        }
    }
}

query invoice($invoiceId: Int!) {
    invoice(invoiceId: $invoiceId)
}

query verifications($pagination: PaginationArgs, $filter: VerifiedSafesFilter) {
    verifications(pagination: $pagination, filter: $filter) {
        createdAt
        revokedAt
        verifierSafeAddress
        verifierProfile {
            avatarUrl
            name
        }
        verifiedSafeAddress
        verifiedProfile {
            id
            displayName
            firstName
            lastName
            avatarUrl
            circlesAddress
        }
    }
}

query findInvitationCreator($code: String!) {
    findInvitationCreator(code: $code) {
        circlesAddress
        displayName
        firstName
        lastName
        avatarUrl
    }
}